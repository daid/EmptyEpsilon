set(CMAKE_SYSTEM_NAME Windows)

set(CMAKE_C_COMPILER i686-w64-mingw32-gcc-posix)
set(CMAKE_CXX_COMPILER i686-w64-mingw32-g++-posix)
set(CMAKE_RC_COMPILER i686-w64-mingw32-windres)

set(CMAKE_CXX_FLAGS_RELEASE_INIT "-flto")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-flto")
set(CMAKE_C_FLAGS_RELEASE_INIT "-flto")
set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT "-flto")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT "-flto")
set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT "-flto")

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

set(MING_DLL_PATH /usr/lib/gcc/i686-w64-mingw32/4.8/)

function(execute_process_ex)
    execute_process(${ARGV} RESULT_VARIABLE RES)
    if(RES)
        message(FATAL_ERROR "Failed to execute: ${ARGV}")
    endif()
endfunction()

if(NOT SDL2_ROOT)
    set(WIN32_BASE "${CMAKE_CURRENT_LIST_DIR}/_win32/")
    set(CMAKE_SYSROOT "${WIN32_BASE}")

    if(NOT IS_DIRECTORY "${WIN32_BASE}/SDL2-2.0.16")
        file(DOWNLOAD http://libsdl.org/release/SDL2-devel-2.0.16-mingw.tar.gz "${WIN32_BASE}/SDL2.tar.gz" SHOW_PROGRESS EXPECTED_HASH SHA256=2bfe48628aa9635c12eac7d421907e291525de1d0b04b3bca4a5bd6e6c881a6f)
        execute_process_ex(COMMAND ${CMAKE_COMMAND} -E tar xzvf SDL2.tar.gz WORKING_DIRECTORY "${WIN32_BASE}")
        execute_process_ex(COMMAND sed -i "s|set(prefix .*)|set(prefix \"${WIN32_BASE}/SDL2-2.0.16/i686-w64-mingw32/\")|g" ${WIN32_BASE}/SDL2-2.0.16/i686-w64-mingw32/lib/cmake/SDL2/sdl2-config.cmake)
    endif()
    
    set(SDL2_ROOT "${WIN32_BASE}/SDL2-2.0.16/i686-w64-mingw32/")

    option(ENABLE_CRASH_LOGGER "" ON)
    set(DRMINGW_ROOT "${WIN32_BASE}/drmingw-0.8.2-win32")
    if(NOT IS_DIRECTORY "${DRMINGW_ROOT}")
        file(DOWNLOAD https://github.com/jrfonseca/drmingw/releases/download/0.8.2/drmingw-0.8.2-win32.7z ${WIN32_BASE}/drmingw.7z SHOW_PROGRESS)
        execute_process_ex(
            COMMAND ${CMAKE_COMMAND} -E tar "x" "drmingw.7z"
            WORKING_DIRECTORY ${WIN32_BASE})
    endif()
endif()
